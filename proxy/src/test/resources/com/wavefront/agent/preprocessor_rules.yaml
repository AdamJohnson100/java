## set of preprocessor rules for unit tests

'all': &default

    # only allow points that contain "foo" substring anywhere in the point line
    test-whitelist-line:
      action  : whitelistRegex
      scope   : pointLine
      match   : ".*foo=.*"

    # block source=bar*
    test-blacklist-sourcename:
      action  : blacklistRegex
      scope   : sourceName
      match   : "bar.*"

    # block all metric names that start with foo.
    test-blacklist-metrics:
      action  : blacklistRegex
      scope   : metricName
      match   : "foo\\..*"

    # block all points where "datacenter" point tag starts with "west"
    test-blacklist-tag:
      action  : blacklistRegex
      scope   : foo
      match   : "west.*"

    # replace bad characters ("&", "$", "!") with underscores in the entire point line string
    test-replace-badchars:
      action  : replaceRegex
      scope   : pointLine
      search  : "[&\\$#!]"
      replace : "_"

    # remove "metrictest." from the metric name
    test-replace-metric-name:
      action  : replaceRegex
      scope   : metricName
      search  : "metrictest\\."
      replace : ""

    # for "bar" point tag replace all "-" characters with dots
    test-replace-tag-dash:
      action  : replaceRegex
      scope   : bar
      search  : "-"
      replace : "."

    # rename a point tag
    example-renametag:
      action  : renameTag
      tag     : foo
      newtag  : baz

    # rename a point tag if its value matches a regex
    example-renametag-regex:
      action  : renameTag
      tag     : qux
      match   : "^\\d*$"
      newtag  : numericTag


'2878':
    # use all rules defined in "default"
    <<: *default

    # additional rules that apply only to port 2878:

    # add a "newtagkey=1" point tag to all points
    example-tag-all-metrics:
      action  : addTag
      tag     : newtagkey
      value   : "1"

    # remove "dc1" point tag
    example-drop-dc1:
      action  : dropTag
      tag     : dc1

    # remove "datacenter" point tag if its value matches s regex
    example-drop-datacenter-az456:
      action  : dropTag
      tag     : datacenter
      match   : "az[4-6]"  # remove az4, az5, az6 (leave az1, az2, az3...)


'4242':
    # use all rules defined in "default"
    <<: *default
